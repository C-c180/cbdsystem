<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.project.mapper.LogEntityMapper" >
  <resultMap id="BaseResultMap" type="main.java.com.project.entity.LogEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="operationTime" property="operationtime" jdbcType="TIMESTAMP" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="operationRecord" property="operationrecord" jdbcType="VARCHAR" />
    <result column="logBelong" property="logbelong" jdbcType="VARCHAR" />
    <result column="logType" property="logtype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, operationTime, ip, operationRecord, logBelong, logType
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="main.java.com.project.entity.LogEntity" >
    insert into t_log (id, username, operationTime, 
      ip, operationRecord, logBelong, 
      logType)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{operationtime,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR}, #{operationrecord,jdbcType=VARCHAR}, #{logbelong,jdbcType=VARCHAR}, 
      #{logtype,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="main.java.com.project.entity.LogEntity" >
    insert into t_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="operationtime != null" >
        operationTime,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="operationrecord != null" >
        operationRecord,
      </if>
      <if test="logbelong != null" >
        logBelong,
      </if>
      <if test="logtype != null" >
        logType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="operationtime != null" >
        #{operationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="operationrecord != null" >
        #{operationrecord,jdbcType=VARCHAR},
      </if>
      <if test="logbelong != null" >
        #{logbelong,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null" >
        #{logtype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="main.java.com.project.entity.LogEntity" >
    update t_log
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="operationtime != null" >
        operationTime = #{operationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="operationrecord != null" >
        operationRecord = #{operationrecord,jdbcType=VARCHAR},
      </if>
      <if test="logbelong != null" >
        logBelong = #{logbelong,jdbcType=VARCHAR},
      </if>
      <if test="logtype != null" >
        logType = #{logtype,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="main.java.com.project.entity.LogEntity" >
    update t_log
    set username = #{username,jdbcType=VARCHAR},
      operationTime = #{operationtime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      operationRecord = #{operationrecord,jdbcType=VARCHAR},
      logBelong = #{logbelong,jdbcType=VARCHAR},
      logType = #{logtype,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>